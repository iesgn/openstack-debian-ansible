- name: ensure neutron plugins are installed
  apt: name={{ item }}
  loop:
    #- neutron-server
    #- neutron-plugin-ml2
    - neutron-linuxbridge-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    #- neutron-metadata-agent

- name: ensure neutron database connections is configured
  ini_file:
    path: /etc/neutron/neutron.conf
    section: database
    option: connection
    value: mysql+pymysql://neutron:{{ neutron_db_password }}@{{ internal_ip }}/neutron
  notify: 
  - restart neutron-services

- name: set default section options
  ini_file:
    path: /etc/neutron/neutron.conf
    section: DEFAULT
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    - { option: "transport_url",
    value: 'rabbit://{{ rabbit_user }}:{{ rabbit_password }}@{{ internal_ip }}:5672/'}
    - { option: "core_plugin", value: ml2 }
    - { option: "service_plugins", value: router }
    - { option: "allow_overlapping_ips", value: "true" }
    - { option: "notify_nova_on_port_status_changes", value: "true" }
    - { option: "notify_nova_on_port_data_changes", value: "true" }
    - { option: "auth_strategy", value: keystone }
  notify: 
  - restart neutron-services

- name: configure the Linux bridge agent. linux_bridge section
  ini_file:
    path: /etc/neutron/plugins/ml2/linuxbridge_agent.ini 
    section: linux_bridge
    option: "physical_interface_mappings"
    value: "provider:{{ external_interface }}"
  notify:
  - restart neutron-services

#- name: configure the layer 3 agent
#  ini_file:
#    path: /etc/neutron/l3_agent.ini
#    section: DEFAULT
#    option: "interface_driver"
#    value: linuxbridge
#  notify:
#  - restart neutron-services
#    
#- name: configure the DHCP agent
#  ini_file:
#    path: /etc/neutron/dhcp_agent.ini
#    section: DEFAULT
#    option: "{{ item.option }}"
#    value: "{{ item.value }}"
#  loop:
#    - { option: "interface_driver", value: linuxbridge }
#    - { option: "dhcp_driver", value: neutron.agent.linux.dhcp.Dnsmasq }
#    - { option: "enable_isolated_metadata", value: "true" }
#  notify:
#  - restart neutron-services